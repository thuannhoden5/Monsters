{"version":3,"sources":["logo.svg","components/card-list/card.component.jsx","components/card-list/card-list.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","title","state","fetch","then","response","json","users","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uSAAe,I,kBCGFA,EAAO,SAACC,GACjB,OAAO,sBAAKC,UAAU,iBAAf,UACH,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,aAAuDC,IAAI,KACnE,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,YCHbC,G,MAAW,SAACR,GAErB,OAAO,qBAAKC,UAAU,YAAf,SACND,EAAMS,SAASC,KAAI,SAAAP,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCLdO,G,MAAY,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aACpC,OACA,8BACI,uBACAZ,UAAU,SACVa,KAAK,SACLF,YAAcA,EACdG,SAAWF,QC8BJG,E,kDAjCb,aAAe,IAAD,8BACZ,gBAaJH,aAAe,SAACI,GAAQ,EAAKC,SAAS,CACpCC,YAAaF,EAAEG,OAAOC,MACtBC,MAAOL,EAAEG,OAAOC,SAdd,EAAKE,MAAQ,CACXd,SAAU,GACVU,YAAa,GACbG,MAAO,IALG,E,qDAQhB,WAAqB,IAAD,OAClBE,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKV,SAAS,CAACT,SAAUmB,S,oBAQxC,WACE,MAAgCC,KAAKN,MAA9Bd,EAAP,EAAOA,SAAP,EAAiBU,YAEjB,OACE,sBAAKlB,UAAU,MAAf,UACE,cAAC,EAAD,CACAW,YAAY,kBACZC,aAAegB,KAAKhB,eAEpB,cAAC,EAAD,CAAUP,KAAK,QAAQG,SAAUA,W,GA7BvBqB,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.53647965.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\"\nimport './card.styles.css'\n\nexport const Card = (props) => {\n    return <div className=\"card-container\">\n        <img src={`https://robohash.org/${props.monster.id}?set=set2`} alt=\"\" />\n        <h2>{props.monster.name}</h2>\n        <p>{props.monster.email}</p>\n    </div>\n}","import React from 'react'\nimport {Card} from './card.component.jsx'\nimport './card-list.style.css'\n\nexport const CardList = (props) => {\n    \n    return <div className=\"card-list\"> \n    {props.monsters.map(monster =>(\n        <Card key={monster.id} monster={monster}/>\n    ))}\n    </div>\n}","import React from \"react\"\nimport './search-box.styles.css'\n\nexport const SearchBox = ({placeholder, handleChange}) => {\n    return(\n    <div>\n        <input\n        className='search'\n        type=\"search\"\n        placeholder= {placeholder}\n        onChange= {handleChange} />\n    </div>\n    )\n   \n}","import logo from './logo.svg';\nimport './App.css';\nimport React, { Component } from 'react';\nimport {CardList} from './components/card-list/card-list.jsx'\nimport {SearchBox} from './components/search-box/search-box.component'\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: '',\n      title: ''\n    }\n  }\ncomponentDidMount() {\n  fetch('https://jsonplaceholder.typicode.com/users')\n  .then(response => response.json())\n  .then(users => this.setState({monsters: users}))\n}\n\nhandleChange = (e) => { this.setState({\n  searchField: e.target.value,\n  title: e.target.value\n})}\n\n  render() {\n    const {monsters, searchField} = this.state;\n    // const filtereMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()))\n    return (\n      <div className=\"App\">\n        <SearchBox\n        placeholder='Search Monsters'\n        handleChange= {this.handleChange}\n        />\n        <CardList name=\"Thuan\" monsters={monsters}/>\n      </div>\n    );\n  }\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}